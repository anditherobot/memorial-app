# Memorial Website Nginx Configuration
# Place this file at: /etc/nginx/sites-available/memorial
# Enable with: sudo ln -s /etc/nginx/sites-available/memorial /etc/nginx/sites-enabled/

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=wish_submit:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=uploads:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=admin:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=60r/m;

# Cache for static assets
proxy_cache_path /var/cache/nginx/memorial levels=1:2 keys_zone=memorial_cache:10m max_size=100m inactive=60m use_temp_path=off;

server {
    listen 80;
    listen [::]:80;
    server_name your-domain.com www.your-domain.com;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name your-domain.com www.your-domain.com;

    # SSL configuration (managed by certbot)
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' unpkg.com cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' cdn.jsdelivr.net; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Document root
    root /home/memorial/public;
    index index.php index.html index.htm;

    # Charset
    charset utf-8;

    # Logging
    access_log /var/log/nginx/memorial_access.log;
    error_log /var/log/nginx/memorial_error.log;

    # General rate limiting
    limit_req zone=general burst=20 nodelay;

    # Handle Laravel routes
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Specific rate limits for sensitive endpoints
    location = /wishes {
        limit_req zone=wish_submit burst=2 nodelay;
        limit_req zone=general burst=10 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /uploads {
        limit_req zone=uploads burst=3 nodelay;
        limit_req zone=general burst=10 nodelay;

        # Increase upload limits
        client_max_body_size 50M;
        client_body_timeout 60s;

        try_files $uri $uri/ /index.php?$query_string;
    }

    location ^~ /admin/ {
        limit_req zone=admin burst=10 nodelay;
        limit_req zone=general burst=20 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP handler
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_hide_header X-Powered-By;

        # Security
        fastcgi_param HTTP_PROXY "";

        # Timeouts
        fastcgi_connect_timeout 60s;
        fastcgi_send_timeout 180s;
        fastcgi_read_timeout 180s;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_intercept_errors on;
    }

    # Static assets with caching
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, no-transform";
        add_header Vary "Accept-Encoding";

        # Compression
        gzip on;
        gzip_vary on;
        gzip_types
            text/css
            text/javascript
            text/xml
            text/plain
            application/javascript
            application/x-javascript
            application/json
            application/xml
            application/rss+xml
            application/atom+xml
            image/svg+xml;
    }

    # Storage files (uploaded content)
    location ^~ /storage/ {
        expires 1M;
        add_header Cache-Control "public, no-transform";

        # Security for uploaded files
        location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
    }

    # Build assets (Vite)
    location ^~ /build/ {
        expires 1y;
        add_header Cache-Control "public, immutable, no-transform";
        gzip_static on;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ^/(storage/framework|storage/logs|bootstrap/cache) {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.(env|log|gitignore|gitattributes)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block common exploit attempts
    location ~* (base64_encode|base64_decode|eval|exec|system) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Favicon and robots
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        expires 1y;
    }

    location = /robots.txt {
        access_log off;
        log_not_found off;
        expires 1d;
    }

    # Health check endpoint
    location = /up {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Monitoring endpoint (for uptime services)
    location = /ping {
        access_log off;
        return 200 "pong\n";
        add_header Content-Type text/plain;
    }
}

# Optional: Redirect www to non-www (or vice versa)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.your-domain.com;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    return 301 https://your-domain.com$request_uri;
}
